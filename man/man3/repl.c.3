.TH "src/repl.c" 3 "Mon Nov 19 2018" "Version v0.0.1" "Minimal Scheme/Lisp Interpreter" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/repl.c \- contains definitions of Read Eval Print Loop functionalities  

.SH SYNOPSIS
.br
.PP
\fC#include 'chars\&.h'\fP
.br
\fC#include 'vector\&.h'\fP
.br
\fC#include 'scope\&.h'\fP
.br
\fC#include 'lexer\&.h'\fP
.br
\fC#include 'parser\&.h'\fP
.br
\fC#include 'eval\&.h'\fP
.br
\fC#include 'repl\&.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBprint_head\fP (void)"
.br
.ti -1c
.RI "void \fBrepl\fP (void)"
.br
.in -1c
.SH "Detailed Description"
.PP 
contains definitions of Read Eval Print Loop functionalities 

takes input from stdin and then pass it through the evaluation process mainly read_token() to READ the tokens out of the string and then \fBparse_sexpr()\fP passing the collected tokens\&. after that we get a parsed s-expression, and then call \fBeval_sexpr()\fP to EVALuate it, PRINTing the result and LOOP\&.
.PP
\fBSee also:\fP
.RS 4
\fBlexer\&.c\fP 
.PP
\fBparser\&.c\fP 
.PP
\fBeval\&.c\fP 
.RE
.PP

.SH "Function Documentation"
.PP 
.SS "void print_head (void)"

.SS "void repl (void)"

.SH "Author"
.PP 
Generated automatically by Doxygen for Minimal Scheme/Lisp Interpreter from the source code\&.
